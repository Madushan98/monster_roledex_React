{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/searchBox/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","Response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","toString","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,wBCKFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCJdC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCA9CM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAErB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCgDjEG,E,kDAjDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GAGVS,YAAa,IAPH,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CAA8CC,MAClD,SAAAC,GAAQ,OAAIA,EAASC,UACpBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAI7C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YAEdQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC5CA,EAAQE,KAAKsB,cAAcC,SAASX,MAUtC,OAPmB,MAAfA,IACFQ,EAAmBjB,GAQnB,sBAAKR,UAAU,MAAf,UAEE,gDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OACtD,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,MAAMC,WAAWL,mBAGzD,cAAC,EAAD,CAAUnB,SAAUiB,W,GA1CVQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac43b1c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react from 'react';\r\n\r\nimport './card.style.css'\r\n\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}></img>\r\n        <h1>{props.monster.name}</h1>\r\n        <h1>{props.monster.email}</h1>\r\n    </div>\r\n);\r\n\r\n","import react from 'react';\r\nimport './card-list.styles.css'\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\" >\r\n        {props.monsters.map(monster => (<Card key={monster.id} monster={monster} />))}</div>\r\n);","import react from 'react';\r\n\r\nimport './seaqrchbox.styles.css'\r\n\r\n\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}\r\n    />\r\n\r\n);\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.components'\nimport { SearchBox } from './components/searchBox/search-box'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [\n\n      ],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(\n      Response => Response.json())\n      .then(users => this.setState({ monsters: users }));\n\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    var filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField)\n    );\n\n    if (searchField == null) {\n      filteredMonsters = monsters;\n    }\n\n\n\n\n    return (\n\n      <div className=\"App\">\n\n        <h1>Monster Roldex</h1>\n        <SearchBox placeholder='search monsters' handleChange={e =>\n          this.setState({ searchField: e.target.value.toString().toLowerCase() })} />\n\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}